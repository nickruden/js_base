// Ex. 1  В консоль выведется объект со значениями '!', 2, 3. 
function func1(obj1) {
	obj1.a = '!';
}

let obj1 = {a: 1, b: 2, c: 3};
func1(obj1);
console.log(obj1);


// Ex. 2  В консоль выведется объект со значениями 1, 2, 3. Так как функция меняет значение локальной переменной(параметра), а не объекта.
function func2(arg2) {
	arg2 = '!';
}

let obj2 = {a: 1, b: 2, c: 3};
func2(obj2.a);
console.log(obj2);


// Ex. 3  В консоль выведется объект со значениями 1, 2, 3.
function func3(obj3) {
	obj3 = '!';
}

let obj3 = {a: 1, b: 2, c: 3};
func3(obj3.a);
console.log(obj3);


// Ex. 4  В консоль выведется массив со значениями 1, 3. Так как внутри функции используется массив и удаляется его значение с помощью метода splice.
function func4(arr4) {
	arr4.splice(1, 1);
}

let arr4 = [1, 2, 3];
func4(arr4);
console.log(arr4);


// Ex. 5  В консоль выведется массив со значениями 1, 2, 3. Так как slice не меняет исходный массив, а возвращает значения в зависимости от указанных параметров, то глобальный массив не изменит своих значений, а slice просто отработает впустую, так как ему некуда вернуть значения без присвоения новому массиву.
function func5(arr5) {
	arr5.slice(1, 1);
}

let arr5 = [1, 2, 3];
func5(arr5);
console.log(arr5);


// Ex. 6  В консоль выведется массив со значениями '!', 2, 3. Так как массив передаётся по адресу, то в локальную переменную записывается адрес глобального массива, соотвественно, меняя значение локальной переменной, меняется значение и глобального массива.
function func6(arr6) {
	let newArr = arr6;
	newArr[0] = '!';
}

let arr6 = [1, 2, 3];
func6(arr6);
console.log(arr6);